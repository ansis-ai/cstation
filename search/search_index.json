{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Control Station (cstation)","text":"<p>Control Station (cstation) is a command-line tool designed to help you manage your servers efficiently.</p>"},{"location":"#overview","title":"Overview","text":"<p>Cstation provides a simple interface for listing servers defined in your inventory files. It aims to simplify common server management tasks.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Server Listing: Quickly view all servers from your inventory, along with their group and connection details.</li> <li>Inventory-Based: Uses standard YAML inventory files (e.g., <code>etc/inventory/ansis.yml</code>, <code>etc/inventory/syc.yml</code>).</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Installation: Follow the instructions in the Installation Guide.</li> <li>Configuration: Ensure your server inventory files are correctly set up in the <code>etc/inventory/</code> directory.</li> <li>Usage: Learn how to use the available commands in the Usage Guide.</li> </ol>"},{"location":"#project-structure","title":"Project Structure","text":"<ul> <li><code>cstation/</code>: Main application code.</li> <li><code>server/</code>: Server management commands.</li> <li><code>utils/</code>: Utility functions.</li> <li><code>docs/</code>: Documentation files (what you're reading now).</li> <li><code>etc/</code>: Configuration files, including server inventories.</li> <li><code>tests/</code>: (Future) Unit and integration tests.</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to cstation! Whether it's bug reports, feature requests, or code contributions, please check out our Contributing Guide to get started.</p> <p>For more information, explore the documentation sections using the navigation menu.</p>"},{"location":"api/","title":"API Reference","text":"<p>This document provides an overview of the Control Station (cstation) API, focusing on how to interact with its server management functionalities programmatically.</p>"},{"location":"api/#core-modules","title":"Core Modules","text":""},{"location":"api/#server-module","title":"<code>server</code> Module","text":"<p>Handles server-related operations.</p> <ul> <li><code>server.main.list()</code>:</li> <li>Description: Retrieves and lists servers from the inventory.</li> <li>Usage: Internally called by the <code>cstation server list</code> CLI command.</li> <li>Returns: Prints server information to the console. Does not return a structured data object directly for external API use in its current form.</li> </ul>"},{"location":"api/#utils-module","title":"<code>utils</code> Module","text":"<p>Contains utility functions used by cstation.</p> <ul> <li> <p><code>utils.get_inventory_hosts()</code>:</p> </li> <li> <p>Description: Reads and parses server inventory files (e.g., <code>etc/inventory/ansis.yml</code>, <code>etc/inventory/syc.yml</code>).</p> </li> <li>Returns: A dictionary containing server groups and their respective host details.</li> <li> <p>Example:</p> <pre><code>from utils import get_inventory_hosts\n\ninventory = get_inventory_hosts()\nif inventory:\n    for group, hosts in inventory.items():\n        print(f\"Group: {group}\")\n        for host_name, host_details in hosts.items():\n            print(f\"  {host_name}: {host_details.get('ansible_host', host_name)}\")\n</code></pre> </li> </ul>"},{"location":"api/#command-execution","title":"Command Execution","text":"<p>While cstation is primarily a CLI tool, its underlying functions (like <code>get_inventory_hosts</code>) can be imported and used in Python scripts if needed for custom automation.</p>"},{"location":"api/#error-handling","title":"Error Handling","text":"<ul> <li>Functions typically print error messages to standard output/error.</li> <li>For <code>get_inventory_hosts()</code>, ensure inventory files exist and are correctly formatted YAML.</li> </ul>"},{"location":"api/#api-stability","title":"API Stability","text":"<ul> <li>The internal structure and functions like <code>get_inventory_hosts()</code> are subject to change in future versions as the tool evolves. Direct programmatic use should be done with caution and an understanding that updates to cstation might require changes to your scripts.</li> </ul>"},{"location":"api/#future-api-enhancements","title":"Future API Enhancements","text":"<p>As cstation grows, more structured APIs for programmatic access to its features (e.g., server information retrieval, command execution) may be developed.</p> <p>For specific integration needs or API requests, please open an issue.</p>"},{"location":"contributing/","title":"Contributing to Control Station","text":"<p>Thank you for your interest in contributing to Control Station (cstation)! This document provides guidelines and instructions for contributing to the project.</p>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>By participating in this project, you agree to abide by our Code of Conduct. Please read it before contributing.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":""},{"location":"contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12 or higher</li> <li>Git</li> <li>A GitHub account</li> </ul>"},{"location":"contributing/#setting-up-your-development-environment","title":"Setting Up Your Development Environment","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally:</li> </ol> <pre><code>git clone https://github.com/your-username/cstation.git\ncd cstation\n</code></pre> <ol> <li>Set up a virtual environment:</li> </ol> <pre><code>python -m venv .venv\nsource .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n</code></pre> <ol> <li>Install the package in development mode:</li> </ol> <pre><code>uv pip install -e .\n</code></pre> <ol> <li>Install development dependencies:    <pre><code>uv pip install -r requirements-dev.txt\n</code></pre></li> </ol>"},{"location":"contributing/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a new branch for your feature or bugfix:</li> </ol> <pre><code>git checkout -b feature/your-feature-name\n</code></pre> <ol> <li> <p>Make your changes and ensure they follow the project's coding standards</p> </li> <li> <p>Write tests for your changes</p> </li> <li> <p>Run the tests to ensure everything works:</p> </li> </ol> <pre><code>pytest\n</code></pre> <ol> <li>Run the linter and formatter:</li> </ol> <pre><code>cstation lint .\ncstation format .\n</code></pre> <ol> <li>Commit your changes with a descriptive commit message:</li> </ol> <pre><code>git commit -m \"Add feature: your feature description\"\n</code></pre> <ol> <li>Push your changes to your fork:</li> </ol> <pre><code>git push origin feature/your-feature-name\n</code></pre> <ol> <li>Create a pull request from your fork to the main repository</li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<ul> <li>Fill in the required pull request template</li> <li>Include tests for any new functionality</li> <li>Update documentation for any changed functionality</li> <li>Ensure all tests pass and code is properly formatted</li> <li>Keep pull requests focused on a single topic</li> <li>Reference any related issues in your pull request</li> </ul>"},{"location":"contributing/#coding-standards","title":"Coding Standards","text":""},{"location":"contributing/#code-style","title":"Code Style","text":"<p>We follow PEP 8 with some modifications. The project uses <code>ruff</code> for linting and formatting. You can check and format your code using:</p> <pre><code>cstation lint . --fix\ncstation format .\n</code></pre>"},{"location":"contributing/#documentation","title":"Documentation","text":"<ul> <li>Use docstrings for all public modules, functions, classes, and methods</li> <li>Follow the Google docstring style</li> <li>Keep documentation up to date with code changes</li> </ul>"},{"location":"contributing/#testing","title":"Testing","text":"<ul> <li>Write tests for all new functionality</li> <li>Aim for high test coverage</li> <li>Use pytest for writing and running tests</li> </ul>"},{"location":"contributing/#feature-requests-and-bug-reports","title":"Feature Requests and Bug Reports","text":"<ul> <li>Use the GitHub issue tracker to report bugs or request features</li> <li>Check existing issues before creating a new one</li> <li>Provide detailed information when reporting bugs:</li> <li>Steps to reproduce</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>Environment details (OS, Python version, etc.)</li> </ul>"},{"location":"contributing/#release-process","title":"Release Process","text":"<ol> <li>Version numbers follow semantic versioning (MAJOR.MINOR.PATCH)</li> <li>Changes are documented in CHANGELOG.md</li> <li>Releases are tagged in Git and published to PyPI</li> </ol>"},{"location":"contributing/#project-structure","title":"Project Structure","text":"<pre><code>cstation/\n\u251c\u2500\u2500 server/       # Server-related functionality\n\u251c\u2500\u2500 utils/        # Utility functions\n\u251c\u2500\u2500 etc/          # Configuration files\n\u251c\u2500\u2500 docs/         # Documentation\n\u251c\u2500\u2500 tests/        # Test suite\n\u2514\u2500\u2500 scripts/      # Development and release scripts\n</code></pre>"},{"location":"contributing/#communication","title":"Communication","text":"<ul> <li>GitHub Issues: Bug reports, feature requests, and discussions</li> <li>Pull Requests: Code review and discussion of implementations</li> </ul>"},{"location":"contributing/#license","title":"License","text":"<p>By contributing to this project, you agree that your contributions will be licensed under the project's license.</p>"},{"location":"contributing/#acknowledgements","title":"Acknowledgements","text":"<p>Thank you to all contributors who help make this project better!</p>"},{"location":"features/","title":"Features","text":"<p>Control Station (cstation) offers a range of features designed to streamline server management.</p>"},{"location":"features/#core-features","title":"Core Features","text":""},{"location":"features/#server-management","title":"Server Management","text":"<ul> <li>List Servers: View all configured servers from your inventory files. Displays group, hostname, and connection details (IP/hostname, user, port).</li> </ul>"},{"location":"features/#key-benefits","title":"Key Benefits","text":"<ul> <li>Simplified Server Overview: Quickly get a list of all your managed servers and their basic connection information.</li> <li>Centralized Inventory: Relies on standard Ansible-like inventory files (<code>etc/inventory/</code>) for server definitions.</li> </ul>"},{"location":"features/#future-features-planned","title":"Future Features (Planned)","text":"<p>While the current version focuses on listing servers, future enhancements may include:</p> <ul> <li>Server Information: Detailed information about specific servers.</li> <li>Remote Command Execution: Run commands on managed servers.</li> <li>Code Quality Tools: Integration of linting, formatting, and static analysis tools.</li> <li>Extensibility: Plugin system for custom commands and integrations.</li> </ul> <p>We welcome contributions and suggestions for new features! Please check our Contributing Guide and open an issue to discuss your ideas.</p>"},{"location":"installation/","title":"Installation","text":"<p>This guide will walk you through the process of installing Control Station (cstation) on your system.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing cstation, ensure you have the following prerequisites:</p> <ul> <li>Python 3.12 or higher</li> <li>pip or uv package manager</li> </ul>"},{"location":"installation/#installation-methods","title":"Installation Methods","text":""},{"location":"installation/#from-source-recommended-for-development","title":"From Source (Recommended for Development)","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/yourusername/cstation.git\ncd cstation\n</code></pre> <ol> <li>Install the package in development mode:</li> </ol> <pre><code># Using uv (recommended)\nuv pip install -e .\n\n# Or using pip\npip install -e .\n</code></pre> <p>This will install the package in \"editable\" mode, allowing you to make changes to the code and have them immediately reflected when you run the <code>cstation</code> command.</p>"},{"location":"installation/#from-pypi-coming-soon","title":"From PyPI (Coming Soon)","text":"<p>In the future, you'll be able to install cstation directly from PyPI:</p> <pre><code># Using uv\nuv pip install cstation\n\n# Or using pip\npip install cstation\n</code></pre>"},{"location":"installation/#verifying-installation","title":"Verifying Installation","text":"<p>To verify that cstation has been installed correctly, run:</p> <pre><code>cstation --help\n</code></pre> <p>You should see the help message displaying all available commands.</p>"},{"location":"installation/#dependencies","title":"Dependencies","text":"<p>The following dependencies will be automatically installed:</p> <ul> <li>typer: For creating the CLI interface</li> <li>ruff: For code linting and formatting</li> <li>rich: For rich text and formatting in the terminal</li> </ul>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues during installation, try the following:</p> <ol> <li>Ensure you're using Python 3.12 or higher:</li> </ol> <pre><code>python --version\n</code></pre> <ol> <li>Update pip to the latest version:</li> </ol> <pre><code>pip install --upgrade pip\n</code></pre> <ol> <li> <p>If you're using a virtual environment, ensure it's activated before installing.</p> </li> <li> <p>Check for any error messages during installation and search for solutions in the project's issue tracker.</p> </li> </ol> <p>If you continue to experience issues, please open an issue with details about your environment and the error you're encountering.</p>"},{"location":"usage/","title":"Usage Guide","text":"<p>This guide covers the basic usage of Control Station (cstation) and its various commands.</p>"},{"location":"usage/#command-overview","title":"Command Overview","text":"<p>Cstation provides commands for server management:</p> <pre><code>cstation [COMMAND] [OPTIONS]\n</code></pre>"},{"location":"usage/#available-commands","title":"Available Commands","text":""},{"location":"usage/#help","title":"Help","text":"<p>To see all available commands and options:</p> <pre><code>cstation --help\n</code></pre> <p>To get help for a specific command:</p> <pre><code>cstation [COMMAND] --help\n</code></pre>"},{"location":"usage/#server-commands","title":"Server Commands","text":"<p>Cstation includes server-related commands for managing your development environment:</p>"},{"location":"usage/#list-servers","title":"List Servers","text":"<pre><code>cstation server list\n</code></pre> <p>Lists all available servers from the inventory file (<code>etc/inventory/ansis.yml</code> or <code>etc/inventory/syc.yml</code>). It displays the server group, hostname, connection details (IP/hostname, user, port).</p> <p>Example Output:</p> <pre><code>[Server Information]\n\nGroup: appserver\nhost1: 192.168.1.10  (user@22)\n\nGroup: dbserver\nhost2: 192.168.1.11  (user@22)\n</code></pre>"},{"location":"usage/#configuration","title":"Configuration","text":"<p>Server inventory is typically managed in YAML files located in the <code>etc/inventory/</code> directory. The <code>server list</code> command reads these files to display server information.</p>"},{"location":"usage/#examples","title":"Examples","text":""},{"location":"usage/#listing-servers","title":"Listing Servers","text":"<pre><code># List all servers from the inventory\ncstation server list\n</code></pre>"},{"location":"usage/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues while using cstation, try the following:</p> <ol> <li>Ensure you're using the latest version.</li> <li>Check the logs for error messages if applicable.</li> <li>Verify your inventory files in <code>etc/inventory/</code> are correctly formatted.</li> </ol> <p>If problems persist, please open an issue with details about your environment and the error you're encountering.</p>"}]}